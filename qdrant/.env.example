# =============================================================================
# Qdrant Vector Database Configuration
# =============================================================================

# Qdrant runs with default configuration optimized for local use
# No environment variables required for basic setup

# -----------------------------------------------------------------------------
# Optional Configuration
# -----------------------------------------------------------------------------

# Uncomment to set specific configurations:
# QDRANT__SERVICE__GRPC_PORT=6334
# QDRANT__SERVICE__HTTP_PORT=6333
# QDRANT__LOG_LEVEL=INFO

# -----------------------------------------------------------------------------
# Integration with Ollama Embeddings
# -----------------------------------------------------------------------------
# Use Qdrant with Ollama's nomic-embed-text model for vector embeddings
#
# Example workflow:
# 1. Generate embeddings via Ollama:
#    curl http://localhost:11434/api/embeddings -d '{
#      "model": "nomic-embed-text",
#      "prompt": "Your text here"
#    }'
#
# 2. Store vectors in Qdrant:
#    POST http://qdrant.localhost/collections/{collection_name}/points
#
# 3. Search similar vectors:
#    POST http://qdrant.localhost/collections/{collection_name}/points/search

# -----------------------------------------------------------------------------
# Integration with Open WebUI
# -----------------------------------------------------------------------------
# Configure Open WebUI to use Qdrant for RAG:
# In open-webui/.env:
#   VECTOR_DB=qdrant
#   QDRANT_URL=http://qdrant:6333

# -----------------------------------------------------------------------------
# Service Information
# -----------------------------------------------------------------------------
# Access URL: http://qdrant.localhost
#
# Features:
# - REST API on port 6333
# - gRPC API on port 6334 (internal only)
# - Web-based dashboard
# - High-performance vector search
# - Persistent storage in ./storage directory
#
# API Documentation:
# - REST API: http://qdrant.localhost/docs
# - Dashboard: http://qdrant.localhost/dashboard
#
# Use Cases:
# - Semantic search with Open WebUI
# - Document Q&A with RAG
# - Similarity search for n8n workflows
# - Vector storage for AI applications
